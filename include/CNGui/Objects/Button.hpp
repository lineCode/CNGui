#ifndef BUTTON_HPP
#define BUTTON_HPP

////////////////////////////////////////////////////////////
// Headers
////////////////////////////////////////////////////////////
#include "CNGui/Objects/Object.hpp"
#include "CNGui/Utilities/Shape.hpp"
#include <SFML/Graphics/Text.hpp>

namespace CNGui
{
////////////////////////////////////////////////////////////
/// \brief Class that creates a graphical button
///
////////////////////////////////////////////////////////////
class Button : public Object
{
public:
    using Object::Object;

    ////////////////////////////////////////////////////////////
    /// \brief Click event
    ///
    /// \return Returns true on button click
    ///
    ////////////////////////////////////////////////////////////
    bool onClick();

    ////////////////////////////////////////////////////////////
    /// \brief Hover event
    ///
    /// \return Returns true when button hovered
    ///
    ////////////////////////////////////////////////////////////
    bool onHover();

private:
    ////////////////////////////////////////////////////////////
    /// \brief Updates the object
    ///
    ////////////////////////////////////////////////////////////
    void update();

    ////////////////////////////////////////////////////////////
    /// \brief Draw the object to a render target
    ///
    /// \param target Render target to draw to
    /// \param states Current render states
    ///
    ////////////////////////////////////////////////////////////
    virtual void draw(sf::RenderTarget& target, sf::RenderStates states) const;

    ////////////////////////////////////////////////////////////
    // Member data
    ////////////////////////////////////////////////////////////
    Shape       mShape;             ///< Shape of the button
    sf::Text    mLabel;             ///< Label of the button
    bool        mClicked = false;   ///< Button clicked
    bool        mHover = false;     ///< Hovering the button
};

}

#endif // BUTTON_HPP
